
input {
  file {
    mode => "read"
    start_position => "beginning"
    path => [
      "/support-bundles/yb-support-bundle-*/YBA/application_logs/application.log"
    ]
    sincedb_path => "/dev/null"
    type => "yb-sb-logs"
    add_field => {
      "yb_component" => "yba"
    }
    codec => multiline {
      pattern => "^YW %{TIMESTAMP_ISO8601} \[%{LOGLEVEL}] %{UUID}"
      negate => true
      what => "previous"
    }
  }
  file {
    mode => "read"
    start_position => "beginning"
    path => [
      "/support-bundles/yb-support-bundle-*/*/master/logs/yb-master.*",
      "/support-bundles/yb-support-bundle-*/*/tserver/logs/yb-tserver.*",
      "/support-bundles/yb-support-bundle-*/*/controller/logs/yb-controller-server.*",
      "/support-bundles/yb-support-bundle-*/*/tserver/logs/postgresql-*"
    ]
    sincedb_path => "/dev/null"
    type => "yb-sb-logs"
    add_field => {
      "yb_component" => "universe"
    }
    codec => multiline {
      pattern => "^%{YB_LOGLEVEL}%{MONTHNUM2}%{MONTHDAY} %{HOUR}:%{MINUTE}:%{NONNEGINT}.%{NONNEGINT} %{NONNEGINT} %{YB_CODE}:%{NONNEGINT}] %{GREEDYDATA:yb_msg}"
      negate => true
      what => "previous"
      max_lines => 100000 
      patterns_dir => [
        "/usr/share/logstash/patterns"
      ]
    }
  }
}


filter {
  if [yb_component] == "universe"
  {
    grok {
      match => {
        "[log][file][path]" => "^/support-bundles/%{DATA:bundle_name}/%{DATA:yb_node_name}/%{DATA:yb_universe_component}/logs/%{GREEDYDATA:yb_logfile}"
      }
      tag_on_failure => ["yblog_filename_grok"]
    }
    grok {
      match => {
        "yb_logfile" => "^%{YB_PROC:yb_process}"
      }
      patterns_dir => [
        "/usr/share/logstash/patterns"
      ]
      tag_on_failure => ["yblog_proc_grok"]
    }
    grok {
      match => {
        "message" => "^%{YB_LOGLEVEL:yb_log_level}%{MONTHNUM2:ts_month}%{MONTHDAY:ts_day} %{HOUR:ts_hr}:%{MINUTE:ts_min}:%{NONNEGINT:ts_sec}.%{NONNEGINT:ts_msec} %{NONNEGINT:yb_thread_id} %{YB_CODE:yb_code}:%{NONNEGINT:yb_code_line}] %{GREEDYDATA:yb_msg}"
      }
      patterns_dir => [
        "/usr/share/logstash/patterns"
      ]
      tag_on_failure => ["yblog_line_grok"]

    }
    mutate {
      copy => { "ts_msec" => "ts_nsec" }
      update => { "[host][name]"=> ""}
    }
    truncate {
      fields => ["ts_msec"]
      length_bytes => 3
      add_field  => {
        "ts" => "%{ts_month}%{ts_day} %{ts_hr}:%{ts_min}:%{ts_sec}.%{ts_msec}"
      }
      remove_field => [
        "ts_month", "ts_day", "ts_hr", "ts_min", "ts_sec", "ts_msec"
      ]
    }
    date {
      match => ["ts", "MMdd HH:mm:ss.SSS"]
      remove_field => ["ts"]
    }
  }

  if [yb_component] == "yba" {
    grok {
      match => {
        "message" => "^YW %{TIMESTAMP_ISO8601:ts} \[%{LOGLEVEL:log_level}] %{UUID:thread_id} %{GREEDYDATA:yb_msg}"
      }
      tag_on_failure => ["yblog_yba_msg_grok"]
    }
    date {
      match => ["ts", "ISO8601"]
      remove_field => ["ts"]
    }
  }
}
output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
  }
  # stdout{}
}
